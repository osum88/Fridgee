// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  name            String?        @db.VarChar(150)
  surname         String?        @db.VarChar(150)
  username        String         @unique @db.VarChar(150)
  birthDate       DateTime?      @map("birth_date")
  email           String         @unique
  passwordHash    String         @map("password_hash")
  emailIsVerified Boolean        @default(false) @map("email_is_verified")
  bankNumber      String?        @map("bank_number") @db.VarChar(255)
  isAdmin         Boolean        @default(false) @map("is_admin")
  createdAt       DateTime       @default(now()) @map("created_at")
  updatedAt       DateTime       @updatedAt @map("updated_at")
  refreshTokens   RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  tokenHash String   @unique @map("token_hash")
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("create_at")
  isValid   Boolean  @default(true) @map("is_valid")

  @@map("refresh_token")
}
